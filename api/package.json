{
  "name": "@librechat/backend",
  "version": "0.6.10",
  "description": "",
  "scripts": {
    "_comment0": "This is a comment, the following section is the new command format",
    "api:test": "cd ../api && cross-env NODE_ENV=test jest",
    "api:b:test": "cd ../api && NODE_ENV=test bun jest",
    "api:test:ci": "cd ../api && jest --ci",
    "client:data-provider": "cd ../client && npm run build:data-provider",
    "client:build": "cd ../client && cross-env NODE_ENV=production vite build",
    "client:build:ci": "cd ../client && cross-env NODE_ENV=development vite build --mode ci",
    "client:dev": "cd ../client && cross-env NODE_ENV=development vite",
    "client:preview-prod": "cd ../client && cross-env NODE_ENV=development vite preview",
    "client:test": "cd ../client && cross-env NODE_ENV=development jest --watch",
    "client:test:ci": "cd ../client && cross-env NODE_ENV=development jest --ci",
    "_comment1": "This is a comment, the following section is the old command format left for backwards compatibility",
    "update": "cd .. && node config/update.js",
    "add-balance": "cd .. && node config/add-balance.js",
    "list-balances": "cd .. && node config/list-balances.js",
    "rebuild:package-lock": "cd .. && node config/packages",
    "reinstall": "cd .. && node config/update.js -l -g",
    "b:reinstall": "cd .. && bun config/update.js -b -l -g",
    "reinstall:docker": "cd .. && node config/update.js -d -g",
    "update:local": "cd .. && node config/update.js -l",
    "update:docker": "cd .. && node config/update.js -d",
    "update:single": "cd .. && node config/update.js -s",
    "update:sudo": "cd .. && node config/update.js --sudo",
    "update:deployed": "cd .. && node config/deployed-update.js",
    "rebase:deployed": "cd .. && node config/deployed-update.js --rebase",
    "start:deployed": "cd .. && docker-compose -f ./deploy-compose.yml up -d",
    "stop:deployed": "cd .. && docker-compose -f ./deploy-compose.yml down",
    "upgrade": "cd .. && node config/upgrade.js",
    "create-user": "cd .. && node config/create-user.js",
    "delete-user": "cd .. && node config/delete-user.js",
    "backend": "cd .. && cross-env NODE_ENV=production node api/server/index.js",
    "backend:dev": "cd .. && cross-env NODE_ENV=development npx nodemon api/server/index.js",
    "backend:stop": "cd .. && node config/stop-backend.js",
    "build:data-provider": "cd .. && cd packages/data-provider && npm run build",
    "frontend": "cd .. && npm run build:data-provider && cd client && npm run build",
    "frontend:ci": "cd .. && npm run build:data-provider && cd client && npm run build:ci",
    "frontend:dev": "cd .. && cd client && npm run dev",
    "e2e": "cd .. && playwright test --config=e2e/playwright.config.local.ts",
    "e2e:ci": "cd .. && playwright test --config=e2e/playwright.config.ts",
    "e2e:debug": "cd .. && cross-env PWDEBUG=1 playwright test --config=e2e/playwright.config.local.ts",
    "e2e:codegen": "cd .. && npx playwright codegen --load-storage=e2e/storageState.json http://localhost:3080/chat/new",
    "e2e:login": "cd .. && npx playwright codegen --save-storage=e2e/auth.json http://localhost:3080/login",
    "e2e:github": "cd .. && act -W .github/workflows/playwright.yml --secret-file my.secrets",
    "test:client": "cd .. && cd client && npm run test",
    "test:api": "cd .. && cd api && npm run test",
    "e2e:update": "cd .. && playwright test --config=e2e/playwright.config.js --update-snapshots",
    "e2e:report": "cd .. && npx playwright show-report e2e/playwright-report",
    "prepare": "cd .. && node config/prepare.js",
    "lint:fix": "cd .. && eslint --fix \"{,!(node_modules)/**/}*.{js,jsx,ts,tsx}\"",
    "lint": "cd .. && eslint \"{,!(node_modules)/**/}*.{js,jsx,ts,tsx}\"",
    "format": "cd .. && prettier-eslint --write \"{,!(node_modules)/**/}*.{js,jsx,ts,tsx}\"",
    "_comment2": "This is a comment, the following section is bun commands",
    "ban-user": "node config/ban-user.js",
    "b:api": "NODE_ENV=production bun run api/server/index.js",
    "b:api-inspect": "NODE_ENV=production bun --inspect run api/server/index.js",
    "b:api:dev": "NODE_ENV=production bun run --watch api/server/index.js",
    "b:data": "cd packages/data-provider && bun run b:build",
    "b:client": "bun --bun run b:data && cd client && bun --bun run b:build",
    "b:client:dev": "bun run b:dev",
    "b:test:client": "bun run b:test",
    "b:test:api": "cd api && bun run b:test",
    "b:balance": "bun config/add-balance.js",
    "b:list-balances": "bun config/list-balances.js",
    "client:b:test": "NODE_ENV=test bunx jest --watch",
    "client:b:build": "NODE_ENV=production bun --bun vite build",
    "client:b:dev": "NODE_ENV=development bunx vite",
    "_comment3": "This is a comment, the following section is the old command format",
    "test": "cross-env NODE_ENV=test jest",
    "b:test": "NODE_ENV=test bun jest",
    "test:ci": "jest --ci"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/danny-avila/LibreChat.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "_moduleAliases": {
    "~": "."
  },
  "imports": {
    "~/*": "./*"
  },
  "bugs": {
    "url": "https://github.com/danny-avila/LibreChat/issues"
  },
  "homepage": "https://librechat.ai",
  "dependencies": {
    "@anthropic-ai/sdk": "^0.16.1",
    "@azure/search-documents": "^12.0.0",
    "@keyv/mongo": "^2.1.8",
    "@keyv/redis": "^2.8.1",
    "@langchain/community": "^0.0.17",
    "@langchain/google-genai": "^0.0.8",
    "axios": "^1.3.4",
    "bcryptjs": "^2.4.3",
    "cheerio": "^1.0.0-rc.12",
    "cohere-ai": "^6.0.0",
    "connect-redis": "^7.1.0",
    "cookie": "^0.5.0",
    "cors": "^2.8.5",
    "dotenv": "^16.0.3",
    "express": "^4.18.2",
    "express-mongo-sanitize": "^2.2.0",
    "express-rate-limit": "^6.9.0",
    "express-session": "^1.17.3",
    "file-type": "^18.7.0",
    "firebase": "^10.8.0",
    "googleapis": "^126.0.1",
    "handlebars": "^4.7.7",
    "html": "^1.0.0",
    "ioredis": "^5.3.2",
    "js-yaml": "^4.1.0",
    "jsonwebtoken": "^9.0.0",
    "keyv": "^4.5.4",
    "keyv-file": "^0.2.0",
    "klona": "^2.0.6",
    "langchain": "^0.0.214",
    "librechat-data-provider": "*",
    "lodash": "^4.17.21",
    "meilisearch": "^0.37.0",
    "mime": "^3.0.0",
    "module-alias": "^2.2.3",
    "mongoose": "^7.1.1",
    "multer": "^1.4.5-lts.1",
    "nodejs-gpt": "^1.37.4",
    "nodemailer": "^6.9.4",
    "openai": "^4.20.1",
    "openai-chat-tokens": "^0.2.8",
    "openid-client": "^5.4.2",
    "passport": "^0.6.0",
    "passport-custom": "^1.1.1",
    "passport-discord": "^0.1.4",
    "passport-facebook": "^3.0.0",
    "passport-github2": "^0.1.12",
    "passport-google-oauth20": "^2.0.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pino": "^8.12.1",
    "sharp": "^0.32.6",
    "tiktoken": "^1.0.10",
    "traverse": "^0.6.7",
    "ua-parser-js": "^1.0.36",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^4.7.1",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "jest": "^29.5.0",
    "nodemon": "^3.0.1",
    "supertest": "^6.3.3"
  }
}
